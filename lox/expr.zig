// **This file was generated by generate_ast.zig**

const std = @import("std");
const ArrayList = std.ArrayList;
const Token = @import("main.zig").Token;
const Value = @import("main.zig").Value;

pub const Binary = struct {
    left: Expr,
    operator: Token,
    right: Expr,

    pub fn init(left: Expr, operator: Token, right: Expr) Binary {
        return .{ .left = left, .operator = operator , .right = right };
    }
};

pub const Grouping = struct {
    expression: Expr,

    pub fn init(expression: Expr) Grouping {
        return .{ .expression = expression};
    }
};

pub const Literal = struct {
    value: Value,

    pub fn init(value: Value) Literal {
        return .{ .value = value};
    }
};

pub const Unary = struct {
    operator: Token,
    right: Expr,

    pub fn init(operator: Token, right: Expr) Unary {
        return .{ .operator = operator, .right = right };
    }
};

